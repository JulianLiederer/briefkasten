---
- name: ensure /etc/rc.conf.d exists
  file: path=/etc/rc.conf.d/ state=directory owner=root group=wheel mode=0655

- name: bind host sshd to primary ip
  lineinfile: dest=/etc/ssh/sshd_config state=present line='ListenAddress {{ ansible_all_ipv4_addresses[0] }}' create=yes
  # TODO: sshd is not actually restarted in RL
  notify:
    - restart sshd

# (re-)configure pkg properly after initial bootstrap
- name: pkg conf directory
  file: path=/etc/pkg state=directory

- name: pkg_repo.conf
  copy: src=pkg_repo.conf dest=/etc/pkg/

- name: pkg.conf
  copy: src=pkg.conf dest=/usr/local/etc/pkg.conf

- name: ensure helper packages are installed
  pkgng: name={{ item }} state=present
  with_items:
  - ezjail
  - sudo
  - screen
  - bash

- name: ensure ezjail is enabled on startup
  service: name=ezjail enabled=yes

- name: Base configuration of ezjail
  template: src=ezjail.conf.j2 dest=/usr/local/etc/ezjail.conf

- name: Install base jail
# we specifically install from the official freebsd host
# TODO: how to ensure integrity of the installed files?
  command: "ezjail-admin install -h ftp.FreeBSD.org creates={{ jails_dir }}/basejail/bin/ls"

- name: pkg.conf for newjail
  copy: src=pkg.conf dest={{ jails_dir }}/newjail/usr/local/etc/pkg.conf

- name: ensure root .ssh for newjail
  file: path={{ jails_dir }}/newjail/root/.ssh state=directory owner=root group=wheel mode=0700

- name: Configure network interface for jails
  template: src=network.j2 dest=/etc/rc.conf.d/network
  notify: restart network

# configure NAT for jails
- name: enable pf at startup
  lineinfile: dest=/etc/rc.conf state=present line='pf_enable=YES' create=yes

- name: upload pf config
  # TODO: only enable for those jails that actually need it (currently appserver jail)
  template: src=pf.conf.j2 dest=/etc/pf.conf
  notify: restart pf


# create and configure the webserver jail

- name: ensure the webserver jail exists
  ezjail: name=webserver ip_addr=192.168.2.117,127.0.0.2 disktype=zfs state=present

- name: let sshd in jail listen only on private ip
  lineinfile: dest={{ jails_dir }}/webserver/etc/ssh/sshd_config state=present line='ListenAddress 127.0.0.2'

- name: enable root ssh access in jail
  lineinfile: dest={{ jails_dir}}/webserver/etc/ssh/sshd_config state=present line='PermitRootLogin without-password' create=yes

- name: copy authorized_keys
  command: cp /root/.ssh/authorized_keys {{ jails_dir }}/webserver/root/.ssh/ creates={{ jails_dir }}/webserver/root/.ssh/authorized_keys

- name: enable sshd inside jail
  lineinfile: dest={{ jails_dir }}/webserver/etc/rc.conf state=present line='sshd_enable=YES' create=yes

- name: start the webserver jail
  command: ezjail-admin start webserver
  
- name: install packages for webserver
  pkgng_chroot: name={{ item }} jail="webserver" state=present
  with_items:
    - pkg
    - python27
    - nginx
  tags: webserver

# create and configure the appserver jail
# TODO: use with_items for the basic, repeatitive setup across jails

- name: ensure the appser jail exists
  ezjail: name=appserver ip_addr={{ hostvars['appserver']['ip']}} disktype=zfs state=present
  tags: appserver

# allow the app server dns access
- name: copy resolv.conf
  command: cp /etc/resolv.conf {{ jails_dir }}/appserver/etc/resolv.conf creates={{ jails_dir }}/appserver/etc/resolv.conf
  tags: appserver

- name: let sshd in jail listen only on private ip
  lineinfile: dest={{ jails_dir }}/appserver/etc/ssh/sshd_config state=present line='ListenAddress {{ hostvars['appserver']['ip']}}'
  tags: appserver

- name: enable root ssh access in jail
  lineinfile: dest={{ jails_dir}}/appserver/etc/ssh/sshd_config state=present line='PermitRootLogin without-password' create=yes
  tags: appserver

- name: copy authorized_keys
  command: cp /root/.ssh/authorized_keys {{ jails_dir }}/appserver/root/.ssh/ creates={{ jails_dir }}/appserver/root/.ssh/authorized_keys
  tags: appserver

- name: enable sshd inside jail
  lineinfile: dest={{ jails_dir }}/appserver/etc/rc.conf state=present line='sshd_enable=YES' create=yes
  tags: appserver

- name: start the webserver jail
  command: ezjail-admin start appserver
  tags: appserver
  
- name: install packages for webserver
  pkgng_chroot: name={{ item }} jail="appserver" state=present
  with_items:
    - pkg
    - python27
    - py27-supervisor
    - py27-virtualenv
    - gmake
    - rsync
    - libxslt
    - sudo
    - gnupg
  tags: appserver


# create and configure the cleanser jail
# TODO: use with_items for the basic, repeatitive setup across jails

- name: ensure the cleanser jail exists
  ezjail: name=cleanser ip_addr={{ hostvars['cleanser']['ip']}} disktype=zfs state=present
  tags: cleanser

- name: let sshd in jail listen only on private ip
  lineinfile: dest={{ jails_dir }}/cleanser/etc/ssh/sshd_config state=present line='ListenAddress {{ hostvars['cleanser']['ip']}}'
  tags: cleanser

- name: enable root ssh access in jail
  lineinfile: dest={{ jails_dir}}/cleanser/etc/ssh/sshd_config state=present line='PermitRootLogin without-password' create=yes
  tags: cleanser

- name: copy authorized_keys
  command: cp /root/.ssh/authorized_keys {{ jails_dir }}/cleanser/root/.ssh/ creates={{ jails_dir }}/cleanser/root/.ssh/authorized_keys
  tags: cleanser

- name: enable sshd inside jail
  lineinfile: dest={{ jails_dir }}/cleanser/etc/rc.conf state=present line='sshd_enable=YES' create=yes
  tags: cleanser

- name: start the cleanser jail
  command: ezjail-admin start cleanser
  tags: cleanser
  
- name: install packages for cleanser
  pkgng_chroot: name={{ item }} jail="cleanser" state=present
  with_items:
    - pkg
    - python27
    - ghostscript9-nox11
    - netpbm
    - zip
    - libreoffice
  tags: cleanser

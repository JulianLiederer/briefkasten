# vi:syntax=dosini
#
# this configuration file contains the defaults values only
[plain-instance:poudriere]
# the host for the FreeBSD pkg repos
# this defaults to a particular instance dedicated to bootstrapping
# this project.
# If you run your own poudriere instance, you need to override these
# values
ip = 5.9.138.196
fingerprint = e7:dd:4f:9f:5a:99:19:65:b2:3f:cf:17:0b:28:48:af
roles = poudriere
fabfile = ../poudriere.py
ansible-pkg_repo_signing_key = /usr/local/etc/ssl/keys/poudriere.key
ansible-poudriere_url_base = https://briefkastenpkg.dtfh.de/

[ez-master:briefkasten]
user = root
firstboot-update = true
bootstrap-files = ../etc/bootstrap-files
ezjail-install-release = 10.2-RELEASE
bootstrap-fingerprint = 39:ba:2c:2f:20:8e:98:49:a1:4c:63:d0:8e:21:fd:ab
fabfile = jailhost.py
roles =
  jails_host
  jailhost

##################################################################
# the remaining values of this section usually don't need to be adjusted
# the pkg repository URL that the jails should use
ansible-jails_pkg_url = https://briefkastenpkg.dtfh.de/packages/
bootstrap-system-pool-size = 10G
bootstrap-geli = yes

[macro:ez-base]
# the FQDN under which the webserver is reached
fqdn=briefkasten.virtualbox

# the URL slug under which the briefkasten should be hosted
approot_url=/briefkasten/

# list of editorial recipients, space separated
# cleansed submissions will be encrypted for and sent to
# each address. This means that for each address there
# needs to be a corresponding public PGP key in the system
# (etc/pgp_pubkeys)
editors=


# list of admin recipients, space separated
# admins get notified when a submission failes
# for each address the corresponding PGP key needs
# have been uploaded to the app server
admins=

# the return address used when sending out emails to editors and admins
mail_sender=
mail_host = localhost
mail_port = 25

# path on the control host to where a valid briefkasten theme is
# located. needs trailing slash:
local_theme_path = ../application/themes/default/
# the name of the theme
theme_name = default

# the URL of the pkg repository used
# the default points to a custom set of packages
# that have been configured to our specific
# TODO: to use your own, you must configure its
# fingerprint, as well
# requirements (i.e. to use libressl, no X11 etc)
jail_host_pkg_repository=https://briefkastenpkg.dtfh.de/packages/

# the maxiumum size that the attachments of a drop may reach and
# still be attached to the notification email
# drops with larger attachments will contain a link to the encrypted archive
# instead
attachment_size_threshold = 1Gb

# number of days after which a dropbox will automatically be deleted
# (at this point it only contains optional replies from the editors)
drop_ttl_days = 180

# a secret to generate valid POST urls
# no default value is provided, to avoid using a known value by accident
#post_secret = eenemeenemuh!


# watchdog configuration
#
# note that for some parameters no default values are provided, to avoid using
# a known and perhaps unwanted value by accident

# a token used to identify submissions posted by the watchdog
# you must configure the identical value for the watchdog process
# any submission POST that contains a key named ``testing_secret``
# and a value matching the value specified here will *not* be
# sent to the editors but instead to pre configured IMAP account where
# the watchdog has access to and can assert a successful submission.
#test_submission_secret = changeme

# the email and IMAP account that the watchdog submissions will be sent to
#watchdog_imap_recipient = changeme
#watchdog_imap_host =
#watchdog_imap_user =
#watchdog_imap_passwd =

#the email address that warnings about failed submissions will be sent to:
# multiple emails can be stated with space separated
#watchdog_notify_email = 

# the sender from which those emails will appear to be have sent from
watchdog_the_sender = noreply@briefkasten.watchdog

# here you can configure the SMTP server that will be used to send the notifications
watchdog_smtp_host = localhost
watchdog_smtp_port = 25
# if you define a username and password they will be used for authentication
# against the smpt server
# watchdog_smtp_username = xxx
# watchdog_smtp_password = xxx

# the grace period within which missing submissions will not be reported
# IOW this is how slow you allow your system to be
watchdog_max_process_secs = 600

# the owner and location of the watchdog installation
# if you are installing the watchdog into its own jail or onto a system
# you control entirely, it's safe to leave these as is.
# otherwise adjust them to your needs (i.e. when using your personal development
# machine for testing purposes)
watchdog_app_user = pyramid
watchdog_app_dir = /usr/local/briefkasten_watchdog

##################################################################
# the remaining values in this file usually don't need to be adjusted


# the default target to which we publish development versions (only used during development)
default_publish_devpi = https://pyfidelity.com/devpi/public/

[ez-zfs:data]
path = tank/data
create = true

[ez-zfs:briefkasten]
path = {zfs[data][path]}/briefkasten
create = true
set-exec = off
set-setuid = off

[ez-instance:webserver]
<= macro:ez-base
ip = 10.0.0.1
rc_require = appserver
roles =
  common
  webserver

[ez-instance:appserver]
<= macro:ez-base
ip = 10.0.0.2
fabfile = appserver.py
rc_require = worker
roles =
  common
  briefkasten
  supervisord
  appserver
mounts =
    src={zfs[briefkasten]} dst=/var/briefkasten create=true

[ez-instance:worker]
<= macro:ez-base
ip = 10.0.0.4
rc_require = cleanser
fabfile = appserver.py
local_pgpkey_path = pgp_pubkeys/
roles =
  common
  briefkasten
  supervisord
  worker
mounts =
    src={zfs[briefkasten]} dst=/var/briefkasten create=true

[ez-instance:testor]
<= macro:ez-base
ip = 10.0.0.10

[ez-instance:cleanser]
# this jail will become the blueprint for the cloned cleanser jails which will do the actual work.
<= macro:ez-base
ip = 10.0.0.3

# Use this configuration for development on the briefkasten itself
# It pulls in all other configurations, enables debugging and adds a 
# few development helpers. Don't use this for production!
# 
# It is suitable to be used as-is to try out a local instance but you are
# encouraged to create your own configuration file that extends this,
# perhaps  like so:
#
#     [buildout]
#     extends = development.cfg
#     
#     [config]
#     fs_theme_path = ${buildout:directory}/themes/my_theme
#     appserver_root_url = /my-custom-root-url/
# 
# If you name your file ``buildout.cfg`` it will be used automatically
# for buildout otherwise pass in the path like so::
#
#     bin/buildout -c my-config.cfg

[buildout]
extensions =
    mr.developer
extends =
    buildout/appserver.cfg
    buildout/deployment.cfg
    buildout/watchdog.cfg
parts =
    pyramid
    lxml
    wsgiconfig
    deploy
    pytest
    pytest-cov
    codeintel
    omelette
    watchdog
    watchdog-config
develop = .

[config]
debug = true
debug_includes =
appserver_root_url = /briefkasten/
fs_theme_path = ${buildout:directory}/themes/default
test_submission_secret = changeme
watchdog_sender = nobody@localhost
watchdog_notify_email = me@localhost
watchdog_smtp_host = localhost


[pyramid]
eggs += briefkasten[watchdog]

[pytest]
recipe = z3c.recipe.scripts
scripts = py.test=test
eggs =
    briefkasten [tests]
    pytest
    WebTest
    PyQuery
arguments = ['--capture=no', 'briefkasten'] + sys.argv[1:]

[pytest-cov]
recipe = z3c.recipe.scripts
scripts = py.test=test-coverage
eggs =
    briefkasten [tests]
    pytest
    pytest-cov
    WebTest
    PyQuery
arguments = ['--capture=no', '--cov', 'briefkasten', '--cov-report', 'term', '--cov-report', 'html', 'briefkasten'] + sys.argv[1:]

# uncomment to use the debug toolbar
# [pyramid]
# eggs += pyramid_debugtoolbar

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${pyramid:eggs}
extra-paths =
    ${omelette:location}

[omelette]
recipe = collective.recipe.omelette
eggs = ${pyramid:eggs}
